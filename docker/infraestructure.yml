version: '3.8'

services:
  zookeeper:
    image: library/zookeeper:3.7.0
    container_name: shows-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    container_name: shows-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      HOSTNAME_COMMAND: hostname -i | awk '{print $$1}'
      KAFKA_HEAP_OPTS: -Xmx3G -Xms1G
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "show-mixer-input-shows:1:1,show-mixer-input-platforms:1:1,show-mixer-output:1:1"
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,EXTERNAL://_{HOSTNAME_COMMAND}:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG_RETENTION_MS: -1
      KAFKA_MESSAGE_MAX_BYTES: 10485880
      KAFKA_NUM_PARTITIONS: 8
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  schema-registry:
    image: confluentinc/cp-schema-registry:5.3.1
    container_name: shows-schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
    depends_on:
      - kafka

  mongo:
    image: mongo
    container_name: shows-database
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data/db

volumes:
  mongo:

networks:
  default:
    external:
      name: shows
